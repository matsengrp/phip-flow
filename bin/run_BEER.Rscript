#!/usr/bin/env Rscript

library(beer)
library(PhIPData)
library(dplyr)

# input from the edgeR process
edgeR_out = readRDS("PhIPData.rds")

# For more on running BEER
# see http://www.bioconductor.org/packages/release/bioc/html/beer.html

### Named vector specifying where we want to store the summarized MCMC output
### NULL indicates that the output should not be stored.
print("Setting up BEER")
assay_locations <- c(
  phi = "beer_fc_marg", 
  phi_Z = "beer_fc_cond", 
  Z = "beer_prob", 
  c = "sampleInfo", 
  pi = "sampleInfo"
)

print("Running BEER::brew")
beer_out <- brew(edgeR_out, assay.names = assay_locations)

## Define matrix of peptides that were run in BEER
print("Getting matrix of peptides that were run")
was_run <- matrix(rep(beer_out$group != "beads", each = nrow(beer_out)), 
                  nrow = nrow(beer_out))

## Identify super-enriched peptides
## These peptides were in samples that were run, but have missing posterior 
## probabilities
print("Identifying super-enriched peptides")
are_se <- was_run & is.na(assay(beer_out, "beer_prob"))

## Enriched peptides are peptides with:
## - posterior probability > 0.5, OR
## - super-enriched peptides
print("Rerunning BEER")
assay(beer_out, "beer_hits") <- assay(beer_out, "beer_prob") > 0.5 | are_se

write.csv(assays(beer_out)$beer_prob, file="beer_prob.csv")
write.csv(assays(beer_out)$beer_hits, file="beer_hits.csv")

saveRDS(edgeR_out, "PhIPData.rds")
