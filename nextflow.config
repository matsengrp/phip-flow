manifest {
    description = 'PhIP-Seq common analysis workflows'
    nextflowVersion = '>= 20.07.0'
}

// PIPELINE KNOBS
params{

    //  Dataset Name Prefix 
    dataset_prefix = 'Pan-CoV-example'

    //  Stream Function 
    //  Set this as 'cat' if fastq files not g'zipped
    fastq_stream_func = 'zcat'

    // Output Xarray pickle
    output_pickle_xarray = true

    //  Output tall format ds 
    output_tall_csv = true

    //  Output wide format ds 
    output_wide_csv = true

    //  read length for align 
    read_length = 125

    //  peptide length for align 
    peptide_tile_length = 117 

    // mismatches allowed (end-to-end) 
    // be sure to run this!
    n_mismatches = 2

    // other bowtie options
    bowtie_optional_args = '--tryhard --nomaqround --norc --best --sam --quiet'

    // Flag for replicating counts for replicate sequences
    replicate_sequence_counts = true

    // flag for running cpm enrichment workflow
    run_cpm_enr_workflow = true

    // flag for running cpm enrichment workflow
    run_diff_sel_workflow = true

}


profiles {
    standard {
        process.container = 'phip-flow:test1'
    }
    
    docker {
        docker.enabled = true
        process.container = 'phip-flow:test1'
        // runOptions = '-u $(id -u):$(id -g)'
    }
}
    
//    batch {
//        process.container = 'quay.io/nextflow/callings-nf:gatk4'
//        process.memory = 8.GB
//        process.executor = 'awsbatch'
//        process.queue = 'nextflow-ci'
//        workDir = 's3://nextflow-ci/work'
//        aws.region = 'eu-west-1'
//        aws.batch.cliPath = '/home/ec2-user/miniconda/bin/aws'
//    }
//
//    aws {
//        process.memory = 8.GB
//        process.container = 'quay.io/nextflow/callings-nf:gatk4'
//
//        params {
//           genome     = "s3://callings-nf/data/genome.fa"
//           reads      = "s3://callings-nf/data/reads/rep*_{1,2}.fq.gz"
//           variants   = "s3://callings-nf/data/known_variants.vcf.gz"
//           denylist   = "s3://callings-nf/data/denylist.bed"
//           results    = "s3://nextflow-ci/callings/results"
//        }
//    }
//
//    cluster {
//        process.container = 'quay.io/nextflow/callings-nf:gatk4'
//
//        singularity.enabled = true
//
//        params {
//            genome    = "$baseDir/data/genome.fa"
//            reads     = "$baseDir/data/reads/rep*_{1,2}.fq.gz"
//            variants  = "$baseDir/data/known_variants.vcf.gz"
//            denylist  = "$baseDir/data/denylist.bed"
//        }
//
//        process {
//            executor = 'crg'
//            penv = 'smp'
//            queue = 'cn-el7'
//            memory = 16.GB
//            errorStrategy = 'finish'
//            scratch=true
//            withLabel: mem_large { memory = 48.GB }
//            withLabel: mem_xlarge { memory = 64.GB }
//        }
//    }
//}


// TODO: can we split these things up? like a config for infrastructure?
// CONTAINER PLATFORM SETUP
// https://www.nextflow.io/docs/latest/config.html#scope-docker
//docker {
//    enabled = true
//}
//
//// COMPUTATIONAL PLATFORM SETUP
//process {
//
//    withLabel: phippery {
//        container = 'quay.io/matsengrp/phippery:135_config_file'
//    }
//
//    withLabel: alignment_tool {
//        container = 'quay.io/jgallowa/bowtie1.3:latest' 
//    }
//
//    withLabel: samtools {
//        container = 'quay.io/biocontainers/samtools:1.3--h0592bc0_3'
//    }
//}

