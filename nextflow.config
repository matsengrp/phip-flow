manifest {
    description = 'PhIP-Seq common analysis workflows'
    nextflowVersion = '>= 20.07.0'
}

// PIPELINE KNOBS
params{


    /*
    sample reads options
    */

    // directory that fastq filepaths are relative to
    reads_dir = "${baseDir}"

    //  Stream Function 
    //  Set this as 'cat' if fastq files not g'zipped
    fastq_stream_func = 'zcat'


    /*
    output options
    */

    //  Dataset Name Prefix 
    dataset_prefix = 'data'

    // Output Xarray pickle
    output_pickle_xarray = true

    //  Output tall format ds 
    output_tall_csv = false

    //  Output wide format ds 
    output_wide_csv = false


    /*
    alignment options
    */

    //  read length for align 
    read_length = 125

    //  peptide length for align 
    peptide_tile_length = 117 

    // mismatches allowed (end-to-end) 
    n_mismatches = 2

    // other bowtie options
    bowtie_optional_args = '--tryhard --nomaqround --norc --best --sam --quiet'

    // Flag for replicating counts for replicate sequences
    replicate_sequence_counts = true



    /*
    Optional workflows
    */

    // flag for running cpm enrichment workflow
    run_cpm_enr_workflow = false

    // flag for running diff sel workflow
    // run_diff_sel_workflow = true

}


profiles {

    standard {
        process.container = 'quay.io/matsengrp/phip-flow'
    }
   
    docker {
        docker.enabled = true
        process.container = 'quay.io/matsengrp/phip-flow'
    }

    cluster {
        process.container = 'quay.io/matsengrp/phip-flow'

        singularity {
            enabled = true
            autoMounts = true
            cacheDir = 'singularity_cache' 
            runOptions = '--contain -W /tmp/'
        }

        process {
            executor = 'slurm'
            queue = 'campus-new'
            cpus = 1
            memory = 16.GB
            time = '1h'
            clusterOptions = '-A overbaugh_j'
            withLabel: mem_large { memory = 48.GB }
            withLabel: mem_xlarge { memory = 64.GB }
        }
    }
}
